/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Server;

import Connections.SplashConnect;
import Server.ServerTurn;
import efiect.DisplayClose;

import java.awt.Image;
import java.io.IOException;
import java.rmi.Naming;
import java.rmi.registry.LocateRegistry;
import java.rmi.server.UnicastRemoteObject;
import javax.swing.ImageIcon;

/**
 *
 * @author Administrator
 */
public class TurnonofSystem extends javax.swing.JFrame {

    /**
     * Creates new form TurnonofSystem
     */
    int num = 1;
    int so = 0;
    static int a = 0;

    public TurnonofSystem() {

        initComponents();
        this.setSize(0, 0);
        new Thread(new DisplayClose(this, 690, 500)).start();
        Image icon = getToolkit().getImage(getClass().getResource("/images/iconmanager.png"));
        setIconImage(icon);
        lbloading.setIcon(null);
        lbloading.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butturn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbloading = new javax.swing.JLabel();
        camera = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        butturn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        butturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/turn.png"))); // NOI18N
        butturn.setBorderPainted(false);
        butturn.setContentAreaFilled(false);
        butturn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        butturn.setDefaultCapable(false);
        butturn.setFocusPainted(false);
        butturn.setFocusable(false);
        butturn.setRequestFocusEnabled(false);
        butturn.setRolloverEnabled(false);
        butturn.setVerifyInputWhenFocusTarget(false);
        butturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                butturnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                butturnMouseExited(evt);
            }
        });
        butturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butturnActionPerformed(evt);
            }
        });
        getContentPane().add(butturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 122, 125));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ATM SYSTEM SERVER");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 550, -1));

        lbloading.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        lbloading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loading.gif"))); // NOI18N
        lbloading.setText("Server is activated");
        getContentPane().add(lbloading, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 350, 150));

        camera.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        camera.setText("Turn on Camera");
        camera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraActionPerformed(evt);
            }
        });
        getContentPane().add(camera, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 150, 60));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Help");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setDefaultCapable(false);
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setRolloverEnabled(false);
        jButton1.setVerifyInputWhenFocusTarget(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 70, -1));

        bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bgmanager.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butturnActionPerformed
        // TODO add your handling code here:

        num++;
        int i = 1;

        //tạo ra Remote Object
        String sg = "rmi://localhost:1202/atm";
        try {
            ServerTurn server = new ServerTurn();

            if (so <= 0) {
                LocateRegistry.createRegistry(1202);
                so++;
            }
            if (num % 2 == 0) {
                a = 2;
                System.out.println("Connected");
                butturn.setIcon(new ImageIcon("src/images/turnoff.png"));
                lbloading.setIcon(new ImageIcon("src/images/loading.gif"));
                lbloading.setText("Server is activated");
                //tạo ra rmi registry(key)
                //binding đối tượng từ xa
                Naming.rebind(sg, server);
            } else {
                a = 1;
                System.out.println("Disconnected");
                butturn.setIcon(new ImageIcon("src/images/turn.png"));
                lbloading.setIcon(null);
                lbloading.setText("");
                Naming.unbind(sg);
                UnicastRemoteObject.unexportObject(server, true);
                lbloading.setText("Server is off");
            }
        } catch (Exception E) {
            E.printStackTrace();
        }

    }//GEN-LAST:event_butturnActionPerformed

    private void butturnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butturnMouseEntered

        if (a == 0 || a == 1) {
            butturn.setIcon(new ImageIcon("src/images/turnon.png"));
        }
//
        if (a == 2) {
            butturn.setIcon(new ImageIcon("src/images/turn1.png"));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_butturnMouseEntered

    private void butturnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butturnMouseExited

        if (a == 0 || a == 1) {
            butturn.setIcon(new ImageIcon("src/images/turn.png"));
        }
        if (a == 2) {
            butturn.setIcon(new ImageIcon("src/images/turnoff.png"));
        }

    }//GEN-LAST:event_butturnMouseExited

    private void cameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraActionPerformed
        try {
            Runtime.getRuntime().exec("Debug/CNCAPTECH_ACP1207B.exe");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_cameraActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Runtime.getRuntime().exec("hh.exe \"Help Camera.chm");
        } catch (IOException ex) {
            ex.printStackTrace();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == 112) {
            try {
                Runtime.getRuntime().exec("hh.exe \"Help Camera.chm");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        } // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (evt.getKeyCode() == 112) {
            try {
                Runtime.getRuntime().exec("hh.exe \"Help Camera.chm");
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TurnonofSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TurnonofSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TurnonofSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TurnonofSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SplashConnect().showSplash();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton butturn;
    private javax.swing.JButton camera;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbloading;
    // End of variables declaration//GEN-END:variables
}
